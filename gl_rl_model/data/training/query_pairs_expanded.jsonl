{"query": "List projects with budget between 50000 and 200000", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Budget BETWEEN 50000 AND 200000", "reasoning": "Use BETWEEN operator on PAC_MNT_PROJECTS.Budget column"}
{"query": "Get all projects with optional contracts", "sql": "SELECT p.Project_Name, c.Contract_Number FROM PAC_MNT_PROJECTS p LEFT OUTER JOIN PROJCNTRTS c ON p.Project_Code = c.Project_Code", "reasoning": "Left outer join PAC_MNT_PROJECTS with PROJCNTRTS"}
{"query": "Get average project budget", "sql": "SELECT AVG(Budget) AS avg_budget FROM PAC_MNT_PROJECTS", "reasoning": "Calculate average of Budget in PAC_MNT_PROJECTS"}
{"query": "List companies alphabetically", "sql": "SELECT * FROM SRM_COMPANIES ORDER BY Company_Name ASC", "reasoning": "Order SRM_COMPANIES by Company_Name ascending"}
{"query": "List Finance department projects", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Department = 'Finance'", "reasoning": "Query PAC_MNT_PROJECTS for Finance department"}
{"query": "Show company details", "sql": "SELECT * FROM SRM_COMPANIES ORDER BY Company_Name", "reasoning": "Retrieve all SRM_COMPANIES ordered by name"}
{"query": "Get time and materials contracts", "sql": "SELECT * FROM PROJCNTRTS WHERE Contract_Type = 'Time and Materials'", "reasoning": "Query PROJCNTRTS for T&M contract type"}
{"query": "Find high-value contracts", "sql": "SELECT * FROM PROJCNTRTS WHERE Contract_Value > 1000000", "reasoning": "Query PROJCNTRTS for contracts over 1 million"}
{"query": "Find projects without staff assignments", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Project_Code NOT IN (SELECT DISTINCT Project_Code FROM PROJSTAFF)", "reasoning": "Subquery to exclude projects in PROJSTAFF"}
{"query": "Show distinct departments", "sql": "SELECT DISTINCT Department FROM PAC_MNT_PROJECTS", "reasoning": "Get unique departments from PAC_MNT_PROJECTS"}
{"query": "Find active projects with budget over 200000 in IT department", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status = 'Active' AND Budget > 200000 AND Department = 'IT'", "reasoning": "Multiple conditions on PAC_MNT_PROJECTS"}
{"query": "Get active companies", "sql": "SELECT * FROM SRM_COMPANIES WHERE Status = 'Active'", "reasoning": "Filter SRM_COMPANIES for active status"}
{"query": "Calculate profit margin per project", "sql": "SELECT Project_Name, ((Revenue - Actual_Cost) / Revenue * 100) as profit_margin FROM PAC_MNT_PROJECTS WHERE Revenue > 0", "reasoning": "Calculate profit margin from PAC_MNT_PROJECTS"}
{"query": "Department with highest total budget", "sql": "SELECT Department, SUM(Budget) as total FROM PAC_MNT_PROJECTS GROUP BY Department ORDER BY total DESC LIMIT 1", "reasoning": "Group PAC_MNT_PROJECTS, sum, order and limit"}
{"query": "Projects running for more than 365 days", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE DATEDIFF(End_Date, Start_Date) > 365", "reasoning": "Calculate date difference in PAC_MNT_PROJECTS"}
{"query": "Show projects ending this year", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE YEAR(End_Date) = YEAR(CURRENT_DATE)", "reasoning": "Query PAC_MNT_PROJECTS for current year End_Date"}
{"query": "Find projects starting in 2024", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE YEAR(Start_Date) = 2024", "reasoning": "Filter PAC_MNT_PROJECTS by Start_Date year"}
{"query": "Show 5 most recent projects", "sql": "SELECT * FROM PAC_MNT_PROJECTS ORDER BY Start_Date DESC LIMIT 5", "reasoning": "Order PAC_MNT_PROJECTS by Start_Date desc, limit 5"}
{"query": "Show high budget projects above 500000", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Budget > 500000", "reasoning": "Filter PAC_MNT_PROJECTS for projects with Budget greater than 500000"}
{"query": "Display active project records", "sql": "SELECT Project_ID, Project_Code, Project_Name, Status FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Select key columns from PAC_MNT_PROJECTS for active projects"}
{"query": "List active projects in the system", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Retrieve all records from PAC_MNT_PROJECTS where Status equals 'Active'"}
{"query": "Show all project contracts", "sql": "SELECT * FROM PROJCNTRTS", "reasoning": "Retrieve all records from PROJCNTRTS table"}
{"query": "Show all project staff assignments", "sql": "SELECT * FROM PROJSTAFF", "reasoning": "Retrieve all records from PROJSTAFF table"}
{"query": "Count contracts per project", "sql": "SELECT Project_Code, COUNT(*) AS contract_count FROM PROJCNTRTS GROUP BY Project_Code", "reasoning": "Group PROJCNTRTS by Project_Code and count"}
{"query": "Find maximum project budget", "sql": "SELECT MAX(Budget) AS max_budget FROM PAC_MNT_PROJECTS", "reasoning": "Find maximum value in PAC_MNT_PROJECTS.Budget"}
{"query": "Find all projects with active status", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Query PAC_MNT_PROJECTS filtering on Status column"}
{"query": "Count staff assignments", "sql": "SELECT COUNT(*) AS assignments FROM PROJSTAFF", "reasoning": "Count all records in PROJSTAFF"}
{"query": "Find inactive companies", "sql": "SELECT Company_Code, Company_Name FROM SRM_COMPANIES WHERE Status = 'Inactive'", "reasoning": "Query SRM_COMPANIES for inactive status records"}
{"query": "Show unique roles in staff", "sql": "SELECT DISTINCT Role FROM PROJSTAFF", "reasoning": "Get distinct Role values from PROJSTAFF"}
{"query": "Count projects by status", "sql": "SELECT Status, COUNT(*) AS count FROM PAC_MNT_PROJECTS GROUP BY Status", "reasoning": "Group PAC_MNT_PROJECTS by Status and count"}
{"query": "List projects and their contracts", "sql": "SELECT p.Project_Name, c.Contract_Number, c.Contract_Value FROM PAC_MNT_PROJECTS p JOIN PROJCNTRTS c ON p.Project_Code = c.Project_Code", "reasoning": "Join PAC_MNT_PROJECTS with PROJCNTRTS on Project_Code"}
{"query": "Calculate total budget for all projects", "sql": "SELECT SUM(Budget) AS total_budget FROM PAC_MNT_PROJECTS", "reasoning": "Sum Budget column in PAC_MNT_PROJECTS"}
{"query": "Categorize projects by budget size", "sql": "SELECT Project_Name, CASE WHEN Budget > 1000000 THEN 'Large' WHEN Budget > 100000 THEN 'Medium' ELSE 'Small' END AS size FROM PAC_MNT_PROJECTS", "reasoning": "Use CASE to categorize PAC_MNT_PROJECTS by Budget"}
{"query": "Count total number of projects", "sql": "SELECT COUNT(*) AS total_projects FROM PAC_MNT_PROJECTS", "reasoning": "Use COUNT aggregate on PAC_MNT_PROJECTS"}
{"query": "List all companies even without contracts", "sql": "SELECT c.Company_Name, ct.Contract_Number FROM SRM_COMPANIES c LEFT JOIN PROJCNTRTS ct ON c.Company_Code = ct.Company_Code", "reasoning": "Left join to include all SRM_COMPANIES"}
{"query": "Find fully allocated staff", "sql": "SELECT Resource_Code FROM PROJSTAFF GROUP BY Resource_Code HAVING SUM(Allocation_Percent) >= 100", "reasoning": "Group PROJSTAFF and find resources at full capacity"}
{"query": "Get top 10 highest budget projects", "sql": "SELECT * FROM PAC_MNT_PROJECTS ORDER BY Budget DESC LIMIT 10", "reasoning": "Order PAC_MNT_PROJECTS by Budget and limit to 10"}
{"query": "Show part-time staff assignments", "sql": "SELECT * FROM PROJSTAFF WHERE Allocation_Percent < 100", "reasoning": "Query PROJSTAFF for allocations less than 100%"}
{"query": "List projects not in IT or Finance", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Department NOT IN ('IT', 'Finance')", "reasoning": "Use NOT IN on PAC_MNT_PROJECTS.Department"}
{"query": "Get projects starting with 'PRJ'", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Project_Code LIKE 'PRJ%'", "reasoning": "Pattern matching on PAC_MNT_PROJECTS.Project_Code"}
{"query": "List project codes with multiple staff", "sql": "SELECT Project_Code, COUNT(*) as staff_count FROM PROJSTAFF GROUP BY Project_Code HAVING COUNT(*) > 1", "reasoning": "Group PROJSTAFF and filter with HAVING"}
{"query": "Find projects with 'System' in name", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Project_Name LIKE '%System%'", "reasoning": "Use LIKE pattern on PAC_MNT_PROJECTS.Project_Name"}
{"query": "Count companies", "sql": "SELECT COUNT(*) AS company_count FROM SRM_COMPANIES", "reasoning": "Count all records in SRM_COMPANIES"}
{"query": "Calculate total revenue", "sql": "SELECT SUM(Revenue) AS total_revenue FROM PAC_MNT_PROJECTS", "reasoning": "Sum Revenue column in PAC_MNT_PROJECTS"}
{"query": "List projects started after January 2024", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Start_Date > '2024-01-01'", "reasoning": "Filter PAC_MNT_PROJECTS where Start_Date is after specified date"}
{"query": "Get projects with company details", "sql": "SELECT p.Project_Name, c.Company_Name FROM PAC_MNT_PROJECTS p JOIN PROJCNTRTS ct ON p.Project_Code = ct.Project_Code JOIN SRM_COMPANIES c ON ct.Company_Code = c.Company_Code", "reasoning": "Join PAC_MNT_PROJECTS with PROJCNTRTS and SRM_COMPANIES"}
{"query": "Count projects per department", "sql": "SELECT Department, COUNT(*) AS project_count FROM PAC_MNT_PROJECTS GROUP BY Department", "reasoning": "Group PAC_MNT_PROJECTS by Department and count"}
{"query": "List projects sorted by start date", "sql": "SELECT * FROM PAC_MNT_PROJECTS ORDER BY Start_Date", "reasoning": "Order PAC_MNT_PROJECTS by Start_Date ascending"}
{"query": "Projects started this month", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE MONTH(Start_Date) = MONTH(CURRENT_DATE) AND YEAR(Start_Date) = YEAR(CURRENT_DATE)", "reasoning": "Filter PAC_MNT_PROJECTS by current month"}
{"query": "Show fixed-price contracts", "sql": "SELECT Contract_Number, Project_Code, Contract_Value FROM PROJCNTRTS WHERE Contract_Type = 'Fixed Price'", "reasoning": "Filter PROJCNTRTS by Contract_Type"}
{"query": "Show projects ordered by budget descending", "sql": "SELECT * FROM PAC_MNT_PROJECTS ORDER BY Budget DESC", "reasoning": "Order PAC_MNT_PROJECTS by Budget descending"}
{"query": "Show all companies", "sql": "SELECT * FROM SRM_COMPANIES", "reasoning": "Retrieve all records from SRM_COMPANIES table"}
{"query": "Get projects with both high budget and high actual cost", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Budget > 500000 AND Actual_Cost > 400000", "reasoning": "Multiple numeric conditions on PAC_MNT_PROJECTS"}
{"query": "Find companies ending with 'Corp'", "sql": "SELECT * FROM SRM_COMPANIES WHERE Company_Name LIKE '%Corp'", "reasoning": "LIKE pattern on SRM_COMPANIES.Company_Name"}
{"query": "List active contracts", "sql": "SELECT * FROM PROJCNTRTS WHERE Status = 'Active'", "reasoning": "Filter PROJCNTRTS for active status"}
{"query": "Find projects with budget over 100000", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Budget > 100000", "reasoning": "Query PAC_MNT_PROJECTS where Budget exceeds 100000"}
{"query": "Combine active projects and companies", "sql": "SELECT Project_Name AS name FROM PAC_MNT_PROJECTS WHERE Status = 'Active' UNION SELECT Company_Name AS name FROM SRM_COMPANIES WHERE Status = 'Active'", "reasoning": "Union active records from PAC_MNT_PROJECTS and SRM_COMPANIES"}
{"query": "Show profitable projects", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Revenue > Actual_Cost", "reasoning": "Compare Revenue and Actual_Cost in PAC_MNT_PROJECTS"}
{"query": "Get high-budget projects with contracts", "sql": "SELECT p.Project_Name, p.Budget, c.Contract_Value FROM PAC_MNT_PROJECTS p JOIN PROJCNTRTS c ON p.Project_Code = c.Project_Code WHERE p.Budget > 500000", "reasoning": "Join PAC_MNT_PROJECTS and PROJCNTRTS, filter by budget"}
{"query": "Show projects with their staff", "sql": "SELECT p.Project_Name, s.Resource_Code, s.Role FROM PAC_MNT_PROJECTS p JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code", "reasoning": "Join PAC_MNT_PROJECTS with PROJSTAFF on Project_Code"}
{"query": "Show all IT department projects", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Department = 'IT'", "reasoning": "Filter PAC_MNT_PROJECTS by Department = 'IT'"}
{"query": "Show departments with total budget over 1 million", "sql": "SELECT Department, SUM(Budget) as total FROM PAC_MNT_PROJECTS GROUP BY Department HAVING SUM(Budget) > 1000000", "reasoning": "Group PAC_MNT_PROJECTS and filter with HAVING"}
{"query": "Get project managers", "sql": "SELECT * FROM PROJSTAFF WHERE Role = 'Project Manager'", "reasoning": "Filter PROJSTAFF by Role = 'Project Manager'"}
{"query": "Average allocation percentage", "sql": "SELECT AVG(Allocation_Percent) AS avg_allocation FROM PROJSTAFF", "reasoning": "Calculate average Allocation_Percent in PROJSTAFF"}
{"query": "Project count and total budget by department", "sql": "SELECT Department, COUNT(*) as projects, SUM(Budget) as total_budget FROM PAC_MNT_PROJECTS GROUP BY Department", "reasoning": "Multiple aggregations on PAC_MNT_PROJECTS grouped by Department"}
{"query": "Average budget per department", "sql": "SELECT Department, AVG(Budget) AS avg_budget FROM PAC_MNT_PROJECTS GROUP BY Department", "reasoning": "Group PAC_MNT_PROJECTS by Department and average Budget"}
{"query": "List staff allocations", "sql": "SELECT Staff_ID, Project_Code, Resource_Code, Allocation_Percent FROM PROJSTAFF", "reasoning": "Query PROJSTAFF for allocation information"}
{"query": "Total budget for active projects", "sql": "SELECT SUM(Budget) AS active_budget FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Sum Budget for active projects in PAC_MNT_PROJECTS"}
{"query": "Show companies that have contracts", "sql": "SELECT * FROM SRM_COMPANIES WHERE Company_Code IN (SELECT DISTINCT Company_Code FROM PROJCNTRTS)", "reasoning": "Subquery to find companies in PROJCNTRTS"}
{"query": "Get distinct company codes with contracts", "sql": "SELECT DISTINCT Company_Code FROM PROJCNTRTS", "reasoning": "Find unique Company_Code in PROJCNTRTS"}
{"query": "Show staff assignments with project names", "sql": "SELECT p.Project_Name, s.Resource_Code, s.Allocation_Percent FROM PAC_MNT_PROJECTS p INNER JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code", "reasoning": "Inner join PAC_MNT_PROJECTS and PROJSTAFF"}
{"query": "Sum budget by department", "sql": "SELECT Department, SUM(Budget) AS total_budget FROM PAC_MNT_PROJECTS GROUP BY Department", "reasoning": "Group PAC_MNT_PROJECTS by Department and sum Budget"}
{"query": "Get minimum project budget", "sql": "SELECT MIN(Budget) AS min_budget FROM PAC_MNT_PROJECTS", "reasoning": "Find minimum value in PAC_MNT_PROJECTS.Budget"}
{"query": "Show budget utilization", "sql": "SELECT Project_Name, (Actual_Cost / Budget * 100) as utilization FROM PAC_MNT_PROJECTS WHERE Budget > 0", "reasoning": "Calculate budget utilization in PAC_MNT_PROJECTS"}
{"query": "Get projects from HR department", "sql": "SELECT Project_Code, Project_Name, Budget FROM PAC_MNT_PROJECTS WHERE Department = 'HR'", "reasoning": "Select HR projects from PAC_MNT_PROJECTS table"}
{"query": "Find projects with above average budget", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Budget > (SELECT AVG(Budget) FROM PAC_MNT_PROJECTS)", "reasoning": "Subquery to get average budget from PAC_MNT_PROJECTS"}
{"query": "Sum of contract values", "sql": "SELECT SUM(Contract_Value) AS total_value FROM PROJCNTRTS", "reasoning": "Sum Contract_Value in PROJCNTRTS"}
{"query": "Show companies with their contracts", "sql": "SELECT c.Company_Name, ct.Contract_Number, ct.Contract_Value FROM SRM_COMPANIES c JOIN PROJCNTRTS ct ON c.Company_Code = ct.Company_Code", "reasoning": "Join SRM_COMPANIES with PROJCNTRTS on Company_Code"}
{"query": "List all company records", "sql": "SELECT Company_ID, Company_Code, Company_Name, Status FROM SRM_COMPANIES", "reasoning": "Select all columns from SRM_COMPANIES"}
{"query": "Show all projects even without staff", "sql": "SELECT p.Project_Name, s.Resource_Code FROM PAC_MNT_PROJECTS p LEFT JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code", "reasoning": "Left join to include all PAC_MNT_PROJECTS"}
{"query": "List unique project statuses", "sql": "SELECT DISTINCT Status FROM PAC_MNT_PROJECTS", "reasoning": "Get distinct Status values from PAC_MNT_PROJECTS"}
{"query": "Show all active projects", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Query PAC_MNT_PROJECTS table and filter by Status = 'Active'"}
{"query": "Count active companies", "sql": "SELECT COUNT(*) AS active_companies FROM SRM_COMPANIES WHERE Status = 'Active'", "reasoning": "Count active records in SRM_COMPANIES"}
{"query": "Show completed or cancelled projects", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status IN ('Completed', 'Cancelled')", "reasoning": "Use IN operator on PAC_MNT_PROJECTS.Status"}
{"query": "Count active projects", "sql": "SELECT COUNT(*) AS active_count FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Count records in PAC_MNT_PROJECTS with active status"}
{"query": "Get projects with budget higher than IT department average", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Budget > (SELECT AVG(Budget) FROM PAC_MNT_PROJECTS WHERE Department = 'IT')", "reasoning": "Subquery for IT department average in PAC_MNT_PROJECTS"}
{"query": "Average budget by status", "sql": "SELECT Status, AVG(Budget) as avg_budget FROM PAC_MNT_PROJECTS GROUP BY Status", "reasoning": "Group PAC_MNT_PROJECTS by Status and average"}
{"query": "Show projects from last quarter", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Start_Date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH)", "reasoning": "Date arithmetic on PAC_MNT_PROJECTS.Start_Date"}
{"query": "Find full-time allocations", "sql": "SELECT * FROM PROJSTAFF WHERE Allocation_Percent = 100", "reasoning": "Filter PROJSTAFF for 100% allocations"}
{"query": "List developers on projects", "sql": "SELECT Project_Code, Resource_Code FROM PROJSTAFF WHERE Role = 'Developer'", "reasoning": "Query PROJSTAFF for Developer role"}
{"query": "Find overbudget projects", "sql": "SELECT Project_Name, Budget, Actual_Cost FROM PAC_MNT_PROJECTS WHERE Actual_Cost > Budget", "reasoning": "Select projects from PAC_MNT_PROJECTS where costs exceed budget"}
{"query": "Find loss-making projects", "sql": "SELECT Project_Name, Revenue, Actual_Cost FROM PAC_MNT_PROJECTS WHERE Revenue < Actual_Cost", "reasoning": "Identify projects where costs exceed revenue in PAC_MNT_PROJECTS"}
{"query": "Find projects with null end date", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE End_Date IS NULL", "reasoning": "Check for NULL in PAC_MNT_PROJECTS.End_Date"}
{"query": "Show project status categories", "sql": "SELECT Project_Name, CASE Status WHEN 'Active' THEN 'Ongoing' WHEN 'Completed' THEN 'Finished' ELSE 'Other' END AS category FROM PAC_MNT_PROJECTS", "reasoning": "CASE statement on PAC_MNT_PROJECTS.Status"}
{"query": "Get me all projects that are currently active", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Filter PAC_MNT_PROJECTS table for active status projects"}
{"query": "Get projects where actual cost exceeds budget", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Actual_Cost > Budget", "reasoning": "Compare Actual_Cost and Budget columns in PAC_MNT_PROJECTS"}
{"query": "List active projects with staff", "sql": "SELECT p.Project_Name, s.Resource_Code FROM PAC_MNT_PROJECTS p JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code WHERE p.Status = 'Active'", "reasoning": "Join PAC_MNT_PROJECTS and PROJSTAFF, filter for active"}
{"query": "Find departments with more than 5 projects", "sql": "SELECT Department, COUNT(*) as count FROM PAC_MNT_PROJECTS GROUP BY Department HAVING COUNT(*) > 5", "reasoning": "Group PAC_MNT_PROJECTS and use HAVING on count"}
{"query": "Show all resources", "sql": "SELECT * FROM PAC_MNT_RESOURCES", "reasoning": "Retrieve all records from PAC_MNT_RESOURCES table"}
{"query": "List available resources", "sql": "SELECT * FROM PAC_MNT_RESOURCES WHERE Availability = 'Available'", "reasoning": "Filter PAC_MNT_RESOURCES by Availability status"}
{"query": "Find resources with high cost rate", "sql": "SELECT * FROM PAC_MNT_RESOURCES WHERE Cost_Rate > 150", "reasoning": "Query PAC_MNT_RESOURCES where Cost_Rate exceeds 150"}
{"query": "Show human resources", "sql": "SELECT * FROM PAC_MNT_RESOURCES WHERE Resource_Type = 'Human'", "reasoning": "Filter PAC_MNT_RESOURCES by Resource_Type"}
{"query": "Get equipment resources", "sql": "SELECT Resource_Code, Resource_Name FROM PAC_MNT_RESOURCES WHERE Resource_Type = 'Equipment'", "reasoning": "Query PAC_MNT_RESOURCES for equipment type"}
{"query": "List resources by capacity", "sql": "SELECT * FROM PAC_MNT_RESOURCES ORDER BY Capacity DESC", "reasoning": "Order PAC_MNT_RESOURCES by Capacity descending"}
{"query": "Find resources with email", "sql": "SELECT Resource_Name, Email FROM PAC_MNT_RESOURCES WHERE Email IS NOT NULL", "reasoning": "Filter PAC_MNT_RESOURCES for non-null Email"}
{"query": "Show resources with capacity over 40 hours", "sql": "SELECT * FROM PAC_MNT_RESOURCES WHERE Capacity > 40", "reasoning": "Filter PAC_MNT_RESOURCES by Capacity"}
{"query": "Get resource allocation details", "sql": "SELECT r.Resource_Name, s.Project_Code, s.Allocation_Percent FROM PAC_MNT_RESOURCES r JOIN PROJSTAFF s ON r.Resource_Code = s.Resource_Code", "reasoning": "Join PAC_MNT_RESOURCES with PROJSTAFF"}
{"query": "Find unallocated resources", "sql": "SELECT * FROM PAC_MNT_RESOURCES WHERE Resource_Code NOT IN (SELECT DISTINCT Resource_Code FROM PROJSTAFF)", "reasoning": "Subquery to find resources not in PROJSTAFF"}
{"query": "Show all contacts", "sql": "SELECT * FROM SRM_CONTACTS", "reasoning": "Retrieve all records from SRM_CONTACTS table"}
{"query": "List contacts for a company", "sql": "SELECT * FROM SRM_CONTACTS WHERE Company_ID = 1", "reasoning": "Filter SRM_CONTACTS by Company_ID"}
{"query": "Find contacts with email", "sql": "SELECT Contact_Name, Email FROM SRM_CONTACTS WHERE Email IS NOT NULL", "reasoning": "Query SRM_CONTACTS for non-null emails"}
{"query": "Get company contacts with phone", "sql": "SELECT c.Company_Name, ct.Contact_Name, ct.Phone FROM SRM_COMPANIES c JOIN SRM_CONTACTS ct ON c.Company_ID = ct.Company_ID", "reasoning": "Join SRM_COMPANIES with SRM_CONTACTS"}
{"query": "Count contacts per company", "sql": "SELECT Company_ID, COUNT(*) as contact_count FROM SRM_CONTACTS GROUP BY Company_ID", "reasoning": "Group SRM_CONTACTS by Company_ID and count"}
{"query": "Show projects with resources and their allocations", "sql": "SELECT p.Project_Name, r.Resource_Name, s.Allocation_Percent FROM PAC_MNT_PROJECTS p JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code JOIN PAC_MNT_RESOURCES r ON s.Resource_Code = r.Resource_Code", "reasoning": "Three-table join: PAC_MNT_PROJECTS, PROJSTAFF, PAC_MNT_RESOURCES"}
{"query": "Get complete project team information", "sql": "SELECT p.Project_Name, r.Resource_Name, s.Role, s.Allocation_Percent, r.Cost_Rate FROM PAC_MNT_PROJECTS p INNER JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code INNER JOIN PAC_MNT_RESOURCES r ON s.Resource_Code = r.Resource_Code", "reasoning": "Multi-join for complete team view"}
{"query": "Show projects with companies and contracts", "sql": "SELECT p.Project_Name, c.Company_Name, ct.Contract_Number, ct.Contract_Value FROM PAC_MNT_PROJECTS p JOIN PROJCNTRTS ct ON p.Project_Code = ct.Project_Code JOIN SRM_COMPANIES c ON ct.Company_Code = c.Company_Code", "reasoning": "Join projects, contracts, and companies"}
{"query": "List active projects with active companies", "sql": "SELECT p.Project_Name, c.Company_Name FROM PAC_MNT_PROJECTS p JOIN PROJCNTRTS ct ON p.Project_Code = ct.Project_Code JOIN SRM_COMPANIES c ON ct.Company_Code = c.Company_Code WHERE p.Status = 'Active' AND c.Status = 'Active'", "reasoning": "Multi-table join with filters"}
{"query": "Calculate total cost per project", "sql": "SELECT Project_Code, SUM(Bill_Rate * Allocation_Percent / 100) as total_cost FROM PROJSTAFF GROUP BY Project_Code", "reasoning": "Calculate costs in PROJSTAFF"}
{"query": "Average cost rate by resource type", "sql": "SELECT Resource_Type, AVG(Cost_Rate) as avg_rate FROM PAC_MNT_RESOURCES GROUP BY Resource_Type", "reasoning": "Group PAC_MNT_RESOURCES and average"}
{"query": "Count resources per project", "sql": "SELECT Project_Code, COUNT(DISTINCT Resource_Code) as resource_count FROM PROJSTAFF GROUP BY Project_Code", "reasoning": "Count distinct resources in PROJSTAFF"}
{"query": "Total allocation per resource", "sql": "SELECT Resource_Code, SUM(Allocation_Percent) as total_allocation FROM PROJSTAFF GROUP BY Resource_Code", "reasoning": "Sum allocations in PROJSTAFF"}
{"query": "Maximum contract value per company", "sql": "SELECT Company_Code, MAX(Contract_Value) as max_contract FROM PROJCNTRTS GROUP BY Company_Code", "reasoning": "Find max contract in PROJCNTRTS"}
{"query": "Project count by year", "sql": "SELECT YEAR(Start_Date) as year, COUNT(*) as projects FROM PAC_MNT_PROJECTS GROUP BY YEAR(Start_Date)", "reasoning": "Group PAC_MNT_PROJECTS by year"}
{"query": "Find overallocated resources", "sql": "SELECT Resource_Code, SUM(Allocation_Percent) as total FROM PROJSTAFF GROUP BY Resource_Code HAVING SUM(Allocation_Percent) > 100", "reasoning": "Find overallocated resources in PROJSTAFF"}
{"query": "Show underutilized resources", "sql": "SELECT r.Resource_Name, COALESCE(SUM(s.Allocation_Percent), 0) as utilization FROM PAC_MNT_RESOURCES r LEFT JOIN PROJSTAFF s ON r.Resource_Code = s.Resource_Code GROUP BY r.Resource_Code, r.Resource_Name HAVING COALESCE(SUM(s.Allocation_Percent), 0) < 50", "reasoning": "Find resources with low utilization"}
{"query": "Calculate project ROI", "sql": "SELECT Project_Name, ((Revenue - Actual_Cost) / Actual_Cost * 100) as ROI FROM PAC_MNT_PROJECTS WHERE Actual_Cost > 0", "reasoning": "Calculate ROI in PAC_MNT_PROJECTS"}
{"query": "Find delayed projects", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE End_Date < CURRENT_DATE AND Status = 'Active'", "reasoning": "Find overdue active projects"}
{"query": "Show budget variance", "sql": "SELECT Project_Name, (Budget - Actual_Cost) as variance FROM PAC_MNT_PROJECTS", "reasoning": "Calculate budget variance"}
{"query": "List high-value customers", "sql": "SELECT c.Company_Name, SUM(ct.Contract_Value) as total_value FROM SRM_COMPANIES c JOIN PROJCNTRTS ct ON c.Company_Code = ct.Company_Code GROUP BY c.Company_Code, c.Company_Name ORDER BY total_value DESC", "reasoning": "Aggregate contract values by company"}
{"query": "What are all the active projects?", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Query PAC_MNT_PROJECTS for active status"}
{"query": "Can you show me projects that are active?", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Filter PAC_MNT_PROJECTS by active status"}
{"query": "I need to see all active project data", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Retrieve active projects from PAC_MNT_PROJECTS"}
{"query": "Display projects where budget exceeds 100k", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Budget > 100000", "reasoning": "Filter PAC_MNT_PROJECTS by budget threshold"}
{"query": "Which projects have budgets larger than 100000?", "sql": "SELECT * FROM PAC_MNT_PROJECTS WHERE Budget > 100000", "reasoning": "Query PAC_MNT_PROJECTS for high budget"}
{"query": "Give me a list of all companies", "sql": "SELECT * FROM SRM_COMPANIES", "reasoning": "Retrieve all SRM_COMPANIES records"}
{"query": "I want to see company information", "sql": "SELECT * FROM SRM_COMPANIES", "reasoning": "Query SRM_COMPANIES table"}
{"query": "How many projects do we have?", "sql": "SELECT COUNT(*) as total_projects FROM PAC_MNT_PROJECTS", "reasoning": "Count all PAC_MNT_PROJECTS"}
{"query": "What's the total number of projects?", "sql": "SELECT COUNT(*) as project_count FROM PAC_MNT_PROJECTS", "reasoning": "Count records in PAC_MNT_PROJECTS"}
{"query": "Update project status to completed", "sql": "UPDATE PAC_MNT_PROJECTS SET Status = 'Completed' WHERE Project_Code = 'PRJ001'", "reasoning": "Update Status in PAC_MNT_PROJECTS"}
{"query": "Insert a new company", "sql": "INSERT INTO SRM_COMPANIES (Company_Code, Company_Name, Status) VALUES ('COMP001', 'New Company', 'Active')", "reasoning": "Insert new record into SRM_COMPANIES"}
{"query": "Delete inactive projects", "sql": "DELETE FROM PAC_MNT_PROJECTS WHERE Status = 'Inactive'", "reasoning": "Remove inactive records from PAC_MNT_PROJECTS"}
{"query": "Rank projects by budget", "sql": "SELECT Project_Name, Budget, RANK() OVER (ORDER BY Budget DESC) as rank FROM PAC_MNT_PROJECTS", "reasoning": "Use window function to rank PAC_MNT_PROJECTS"}
{"query": "Show running total of project budgets", "sql": "SELECT Project_Name, Budget, SUM(Budget) OVER (ORDER BY Start_Date) as running_total FROM PAC_MNT_PROJECTS", "reasoning": "Running sum using window function"}
{"query": "Find projects that have staff assigned", "sql": "SELECT * FROM PAC_MNT_PROJECTS p WHERE EXISTS (SELECT 1 FROM PROJSTAFF s WHERE s.Project_Code = p.Project_Code)", "reasoning": "Use EXISTS to check PROJSTAFF"}
{"query": "Companies without contracts", "sql": "SELECT * FROM SRM_COMPANIES c WHERE NOT EXISTS (SELECT 1 FROM PROJCNTRTS ct WHERE ct.Company_Code = c.Company_Code)", "reasoning": "Use NOT EXISTS with PROJCNTRTS"}
{"query": "Show projects with budget or zero", "sql": "SELECT Project_Name, COALESCE(Budget, 0) as budget FROM PAC_MNT_PROJECTS", "reasoning": "Use COALESCE for null handling in PAC_MNT_PROJECTS"}
{"query": "Get resources with email or 'No Email'", "sql": "SELECT Resource_Name, COALESCE(Email, 'No Email') as email FROM PAC_MNT_RESOURCES", "reasoning": "Handle nulls in PAC_MNT_RESOURCES.Email"}
