{"query": "Show all active projects", "sql": "SELECT Project_Code, Project_Name, Status, Start_Date, End_Date FROM PAC_MNT_PROJECTS WHERE Status = 'Active'", "reasoning": "Identified 'active projects' as filtering PAC_MNT_PROJECTS table by Status = 'Active'"}
{"query": "List companies with their contact information", "sql": "SELECT c.Company_Name, c.Company_Code, ct.Contact_Name, ct.Email, ct.Phone FROM SRM_COMPANIES c LEFT JOIN SRM_CONTACTS ct ON c.Company_ID = ct.Company_ID", "reasoning": "Need to join SRM_COMPANIES with SRM_CONTACTS to get complete contact information"}
{"query": "Find projects with budget over 100000", "sql": "SELECT Project_Code, Project_Name, Budget, Actual_Cost FROM PAC_MNT_PROJECTS WHERE Budget > 100000", "reasoning": "Simple filter on PAC_MNT_PROJECTS using Budget column with comparison operator"}
{"query": "Show resource allocation for active projects", "sql": "SELECT p.Project_Name, r.Resource_Name, s.Role, s.Allocation_Percent FROM PAC_MNT_PROJECTS p INNER JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code INNER JOIN PAC_MNT_RESOURCES r ON s.Resource_Code = r.Resource_Code WHERE p.Status = 'Active' AND s.Status = 'Assigned'", "reasoning": "Three-way join between projects, staff assignments, and resources, filtered by active status"}
{"query": "Count projects per company", "sql": "SELECT c.Company_Name, COUNT(DISTINCT ct.Project_Code) as Project_Count FROM SRM_COMPANIES c LEFT JOIN PROJCNTRTS ct ON c.Company_Code = ct.Company_Code GROUP BY c.Company_Name ORDER BY Project_Count DESC", "reasoning": "Aggregate query using COUNT with GROUP BY on company, joining through contracts"}
{"query": "Find overbudget projects", "sql": "SELECT Project_Code, Project_Name, Budget, Actual_Cost, (Actual_Cost - Budget) as Overrun FROM PAC_MNT_PROJECTS WHERE Actual_Cost > Budget", "reasoning": "Filter projects where actual cost exceeds budget, calculate overrun amount"}
{"query": "List available resources", "sql": "SELECT Resource_Code, Resource_Name, Resource_Type, Capacity, Cost_Rate FROM PAC_MNT_RESOURCES WHERE Availability = 'Available' AND Capacity > 0", "reasoning": "Filter resources by availability status and positive capacity"}
{"query": "Show contracts expiring this year", "sql": "SELECT Contract_Number, Project_Code, Company_Code, Contract_Value, End_Date FROM PROJCNTRTS WHERE YEAR(End_Date) = YEAR(CURRENT_DATE) AND End_Date >= CURRENT_DATE", "reasoning": "Date-based filter for contracts ending in current year but not yet expired"}
{"query": "Get project financial summary", "sql": "SELECT Project_Code, Project_Name, Budget, Actual_Cost, Revenue, (Revenue - Actual_Cost) as Profit, CASE WHEN Budget > 0 THEN ((Actual_Cost / Budget) * 100) ELSE 0 END as Budget_Utilization FROM PAC_MNT_PROJECTS", "reasoning": "Calculate financial metrics including profit and budget utilization percentage"}
{"query": "Find high priority support tickets", "sql": "SELECT Support_ID, Company_Code, Support_Type, Description, Reported_Date FROM CLNTSUPP WHERE Priority = 'High' AND Status = 'Open' ORDER BY Reported_Date", "reasoning": "Filter support tickets by high priority and open status, ordered by date"}
{"query": "Show staff assignments with billing rates", "sql": "SELECT p.Project_Name, r.Resource_Name, s.Role, s.Allocation_Percent, s.Bill_Rate, (s.Allocation_Percent * s.Bill_Rate / 100) as Effective_Rate FROM PROJSTAFF s INNER JOIN PAC_MNT_PROJECTS p ON s.Project_Code = p.Project_Code INNER JOIN PAC_MNT_RESOURCES r ON s.Resource_Code = r.Resource_Code WHERE s.Status = 'Assigned'", "reasoning": "Join staff assignments with projects and resources, calculate effective billing rate"}
{"query": "List project revisions in last month", "sql": "SELECT p.Project_Name, r.Revision_Type, r.Description, r.Revision_Date, r.Approved_By FROM PROJEVISION r INNER JOIN PAC_MNT_PROJECTS p ON r.Project_Code = p.Project_Code WHERE r.Revision_Date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH)", "reasoning": "Join project revisions with projects, filter by date in last month"}
{"query": "Find companies without contacts", "sql": "SELECT c.Company_Name, c.Company_Code FROM SRM_COMPANIES c LEFT JOIN SRM_CONTACTS ct ON c.Company_ID = ct.Company_ID WHERE ct.Contact_ID IS NULL", "reasoning": "Left join to find companies with no matching contacts using NULL check"}
{"query": "Calculate total resource cost per project", "sql": "SELECT p.Project_Name, SUM(s.Allocation_Percent * s.Cost_Rate / 100) as Total_Resource_Cost FROM PAC_MNT_PROJECTS p INNER JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code GROUP BY p.Project_Name ORDER BY Total_Resource_Cost DESC", "reasoning": "Aggregate query to sum resource costs per project using allocation percentages"}
{"query": "Show business opportunities by stage", "sql": "SELECT Stage, COUNT(*) as Opportunity_Count, SUM(Estimated_Value) as Total_Value, AVG(Probability) as Avg_Probability FROM BIZ_OPP_GEN_PROPERTIES WHERE Status = 'Active' GROUP BY Stage", "reasoning": "Group opportunities by stage with multiple aggregate functions"}
{"query": "Find projects with no staff assigned", "sql": "SELECT p.Project_Code, p.Project_Name, p.Status FROM PAC_MNT_PROJECTS p LEFT JOIN PROJSTAFF s ON p.Project_Code = s.Project_Code WHERE s.Staff_ID IS NULL AND p.Status = 'Active'", "reasoning": "Left join to identify active projects without staff assignments"}
{"query": "List contracts by type and value", "sql": "SELECT Contract_Type, COUNT(*) as Contract_Count, SUM(Contract_Value) as Total_Value, AVG(Contract_Value) as Avg_Value FROM PROJCNTRTS WHERE Status = 'Active' GROUP BY Contract_Type", "reasoning": "Aggregate contracts by type with count, sum, and average calculations"}
{"query": "Show resource utilization summary", "sql": "SELECT r.Resource_Name, r.Capacity, COALESCE(SUM(s.Allocation_Percent), 0) as Total_Allocation, (r.Capacity - COALESCE(SUM(s.Allocation_Percent), 0)) as Available_Capacity FROM PAC_MNT_RESOURCES r LEFT JOIN PROJSTAFF s ON r.Resource_Code = s.Resource_Code AND s.Status = 'Assigned' GROUP BY r.Resource_Name, r.Capacity", "reasoning": "Calculate resource utilization using left join and COALESCE for null handling"}
{"query": "Find duplicate project codes", "sql": "SELECT Project_Code, COUNT(*) as Occurrence_Count FROM PAC_MNT_PROJECTS GROUP BY Project_Code HAVING COUNT(*) > 1", "reasoning": "Use GROUP BY with HAVING clause to identify duplicate project codes"}
{"query": "Get project timeline overview", "sql": "SELECT Project_Name, Start_Date, End_Date, DATEDIFF(End_Date, Start_Date) as Duration_Days, CASE WHEN End_Date < CURRENT_DATE THEN 'Completed' WHEN Start_Date > CURRENT_DATE THEN 'Not Started' ELSE 'In Progress' END as Timeline_Status FROM PAC_MNT_PROJECTS", "reasoning": "Calculate project duration and determine timeline status using CASE statement"}
{"query": "Show total budget by department", "sql": "SELECT Department, SUM(Budget) as Total_Budget FROM PAC_MNT_PROJECTS GROUP BY Department", "reasoning": "Aggregate budget by department using SUM and GROUP BY"}
{"query": "List overdue projects", "sql": "SELECT Project_Code, Project_Name, End_Date FROM PAC_MNT_PROJECTS WHERE End_Date < CURRENT_DATE AND Status != 'Completed'", "reasoning":"Filter for projects past end date that are not completed"}
{"query": "Find high-budget projects", "sql": "SELECT Project_Code, Project_Name, Budget FROM PAC_MNT_PROJECTS WHERE Budget > 500000 ORDER BY Budget DESC", "reasoning": "Filter by budget threshold and sort by budget descending"}
{"query": "Show project managers", "sql": "SELECT DISTINCT r.Resource_Name, r.Email FROM PAC_MNT_RESOURCES r INNER JOIN PROJSTAFF s ON r.Resource_Code = s.Resource_Code WHERE s.Role = 'Project Manager'", "reasoning": "Join resources with staff assignments and filter by role"}
{"query": "Count active contracts", "sql": "SELECT COUNT(*) as Active_Contracts FROM PROJCNTRTS WHERE Status = 'Active'", "reasoning": "Simple count with status filter"}
